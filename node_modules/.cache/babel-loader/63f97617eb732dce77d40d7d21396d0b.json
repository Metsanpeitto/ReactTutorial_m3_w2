{"ast":null,"code":"var _jsxFileName = \"/home/jarri/Desktop/Work/Microverse/module-3/week2/ReactTutorial_m3_w2/src/functionBased/components/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FaTrash } from 'react-icons/fa';\nimport styles from './TodoItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = props => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  useEffect(() => () => {\n    console.log('Cleaning up...');\n  }, []);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = event => {\n    if (event.key === 'Enter') {\n      setEditing(false);\n    }\n  };\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through'\n  };\n  const {\n    todo,\n    handleChangeProps,\n    deleteTodoProps,\n    setUpdate\n  } = props;\n  const {\n    completed,\n    id,\n    title\n  } = todo;\n  const viewMode = {};\n  const editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.item,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: handleEditing,\n      style: viewMode,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: styles.checkbox,\n        checked: completed,\n        onChange: () => handleChangeProps(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteTodoProps(id),\n        children: /*#__PURE__*/_jsxDEV(FaTrash, {\n          style: {\n            color: 'orangered',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: completed ? completedStyle : null,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      style: editMode,\n      className: styles.textInput,\n      value: title,\n      onChange: e => {\n        setUpdate(e.target.value, id);\n      },\n      onKeyDown: handleUpdatedDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoItem, \"4da9QhRSPGznlVTnx8cpe7ty4OM=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/module-3/week2/ReactTutorial_m3_w2/src/functionBased/components/TodoItem.js"],"names":["React","useState","useEffect","FaTrash","styles","TodoItem","props","editing","setEditing","console","log","handleEditing","handleUpdatedDone","event","key","completedStyle","fontStyle","color","opacity","textDecoration","todo","handleChangeProps","deleteTodoProps","setUpdate","completed","id","title","viewMode","editMode","display","item","checkbox","fontSize","textInput","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CACP,MAAM,MAAM;AACVO,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GAHM,EAIP,EAJO,CAAT;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAC1BH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMI,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAJD;;AAMA,QAAMO,cAAc,GAAG;AACrBC,IAAAA,SAAS,EAAE,QADU;AAErBC,IAAAA,KAAK,EAAE,SAFc;AAGrBC,IAAAA,OAAO,EAAE,GAHY;AAIrBC,IAAAA,cAAc,EAAE;AAJK,GAAvB;AAOA,QAAM;AACJC,IAAAA,IADI;AACEC,IAAAA,iBADF;AACqBC,IAAAA,eADrB;AACsCC,IAAAA;AADtC,MAEFjB,KAFJ;AAGA,QAAM;AAAEkB,IAAAA,SAAF;AAAaC,IAAAA,EAAb;AAAiBC,IAAAA;AAAjB,MAA2BN,IAAjC;AAEA,QAAMO,QAAQ,GAAG,EAAjB;AACA,QAAMC,QAAQ,GAAG,EAAjB;;AAEA,MAAIrB,OAAJ,EAAa;AACXoB,IAAAA,QAAQ,CAACE,OAAT,GAAmB,MAAnB;AACD,GAFD,MAEO;AACLD,IAAAA,QAAQ,CAACC,OAAT,GAAmB,MAAnB;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,IAAtB;AAAA,4BACE;AAAK,MAAA,aAAa,EAAEnB,aAApB;AAAmC,MAAA,KAAK,EAAEgB,QAA1C;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAEvB,MAAM,CAAC2B,QAFpB;AAGE,QAAA,OAAO,EAAEP,SAHX;AAIE,QAAA,QAAQ,EAAE,MAAMH,iBAAiB,CAACI,EAAD;AAJnC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMH,eAAe,CAACG,EAAD,CAApD;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAE;AAAER,YAAAA,KAAK,EAAE,WAAT;AAAsBe,YAAAA,QAAQ,EAAE;AAAhC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAM,QAAA,KAAK,EAAER,SAAS,GAAGT,cAAH,GAAoB,IAA1C;AAAA,kBAAiDW;AAAjD;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEE,QAFT;AAGE,MAAA,SAAS,EAAExB,MAAM,CAAC6B,SAHpB;AAIE,MAAA,KAAK,EAAEP,KAJT;AAKE,MAAA,QAAQ,EAAGQ,CAAD,IAAO;AACfX,QAAAA,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiBX,EAAjB,CAAT;AACD,OAPH;AAQE,MAAA,SAAS,EAAEb;AARb;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAnED;;GAAMP,Q;;KAAAA,Q;AAqEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FaTrash } from 'react-icons/fa';\nimport styles from './TodoItem.module.css';\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  useEffect(\n    () => () => {\n      console.log('Cleaning up...');\n    },\n    [],\n  );\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === 'Enter') {\n      setEditing(false);\n    }\n  };\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  const {\n    todo, handleChangeProps, deleteTodoProps, setUpdate,\n  } = props;\n  const { completed, id, title } = todo;\n\n  const viewMode = {};\n  const editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => handleChangeProps(id)}\n        />\n        <button type=\"button\" onClick={() => deleteTodoProps(id)}>\n          <FaTrash style={{ color: 'orangered', fontSize: '16px' }} />\n        </button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={(e) => {\n          setUpdate(e.target.value, id);\n        }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}